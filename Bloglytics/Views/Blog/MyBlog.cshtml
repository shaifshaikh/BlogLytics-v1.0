@using Bloglytics.DTO
@model MyBlogsViewModel
@{
    ViewData["Title"] = "My Blogs";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <style>
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 40px;
        }

            .page-header h1 {
                font-size: 36px;
                color: #2d3748;
            }

        .btn-create {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 12px 30px;
            border-radius: 10px;
            text-decoration: none;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 10px;
            transition: all 0.3s;
        }

            .btn-create:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 20px rgba(102, 126, 234, 0.4);
            }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            margin-bottom: 15px;
        }

            .stat-icon.blue {
                background: linear-gradient(135deg, #667eea, #764ba2);
                color: white;
            }

            .stat-icon.green {
                background: linear-gradient(135deg, #56ab2f, #a8e063);
                color: white;
            }

            .stat-icon.orange {
                background: linear-gradient(135deg, #f2994a, #f2c94c);
                color: white;
            }

        .stat-value {
            font-size: 32px;
            font-weight: bold;
            color: #2d3748;
        }

        .stat-label {
            color: #718096;
            font-size: 14px;
        }

        .blogs-section {
            margin-bottom: 40px;
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .section-title {
            font-size: 24px;
            color: #2d3748;
            font-weight: 600;
        }

        .blogs-table {
            background: white;
            border-radius: 15px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            overflow: hidden;
        }

        .table {
            width: 100%;
        }

            .table thead {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
            }

            .table th {
                padding: 15px 20px;
                text-align: left;
                font-weight: 600;
            }

            .table td {
                padding: 15px 20px;
                border-bottom: 1px solid #e2e8f0;
            }

            .table tr:last-child td {
                border-bottom: none;
            }

            .table tbody tr:hover {
                background: #f8f9fa;
            }

        .blog-title-cell {
            font-weight: 600;
            color: #2d3748;
            max-width: 300px;
        }

        .status-badge {
            padding: 5px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }

            .status-badge.published {
                background: #d4edda;
                color: #155724;
            }

            .status-badge.draft {
                background: #fff3cd;
                color: #856404;
            }

        .action-buttons {
            display: flex;
            gap: 10px;
        }

        .btn-sm {
            padding: 6px 12px;
            border-radius: 6px;
            font-size: 13px;
            text-decoration: none;
            transition: all 0.3s;
            border: none;
            cursor: pointer;
        }

        .btn-view {
            background: #667eea;
            color: white;
        }

            .btn-view:hover {
                background: #5568d3;
            }

        .btn-edit {
            background: #f59e0b;
            color: white;
        }

            .btn-edit:hover {
                background: #d97706;
            }

        .btn-delete {
            background: #ef4444;
            color: white;
        }

            .btn-delete:hover {
                background: #dc2626;
            }

        .no-data {
            text-align: center;
            padding: 60px 20px;
            color: #a0aec0;
        }

            .no-data i {
                font-size: 60px;
                margin-bottom: 15px;
                opacity: 0.3;
            }

        @@media (max-width: 968px) {
            .page-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 20px;
            }

            .table {
                font-size: 14px;
            }

                .table th, .table td {
                    padding: 10px;
                }
        }
    </style>
}

<div class="page-header">
    <h1>📝 My Blogs</h1>
    <a href="@Url.Action("Create")" class="btn-create">
        <i class="fas fa-plus"></i> Create New Blog
    </a>
</div>

<div class="stats-grid">
    <div class="stat-card">
        <div class="stat-icon blue">
            <i class="fas fa-eye"></i>
        </div>
        <div class="stat-value">@Model.TotalViews.ToString("N0")</div>
        <div class="stat-label">Total Views</div>
    </div>

    <div class="stat-card">
        <div class="stat-icon green">
            <i class="fas fa-heart"></i>
        </div>
        <div class="stat-value">@Model.TotalLikes</div>
        <div class="stat-label">Total Likes</div>
    </div>

    <div class="stat-card">
        <div class="stat-icon orange">
            <i class="fas fa-comments"></i>
        </div>
        <div class="stat-value">@Model.TotalComments</div>
        <div class="stat-label">Total Comments</div>
    </div>
</div>

<!-- Published Blogs -->
<div class="blogs-section">
    <div class="section-header">
        <h2 class="section-title">✅ Published Blogs (@Model.PublishedBlogs.Count)</h2>
    </div>

    @if (Model.PublishedBlogs != null && Model.PublishedBlogs.Any())
    {
        <div class="blogs-table">
            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Category</th>
                        <th>Views</th>
                        <th>Likes</th>
                        <th>Comments</th>
                        <th>Published</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var blog in Model.PublishedBlogs)
                    {
                        <tr>
                            <td class="blog-title-cell">@blog.Title</td>
                            <td>@blog.CategoryName</td>
                            <td><i class="fas fa-eye"></i> @blog.ViewCount</td>
                            <td><i class="fas fa-heart"></i> @blog.LikeCount</td>
                            <td><i class="fas fa-comment"></i> @blog.CommentCount</td>
                            <td>@blog.PublishedAt?.ToString("MMM dd, yyyy")</td>
                            <td>
                                <div class="action-buttons">
                                    <a href="@Url.Action("Detail", new { id = blog.PostId })" class="btn-sm btn-view" title="View">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="@Url.Action("Edit", new { id = blog.PostId })" class="btn-sm btn-edit" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button onclick="deleteBlog(@blog.PostId, '@blog.Title')" class="btn-sm btn-delete" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="blogs-table">
            <div class="no-data">
                <i class="fas fa-blog"></i>
                <p>No published blogs yet</p>
            </div>
        </div>
    }
</div>

<!-- Draft Blogs -->
<div class="blogs-section">
    <div class="section-header">
        <h2 class="section-title">📄 Draft Blogs (@Model.DraftBlogs.Count)</h2>
    </div>

    @if (Model.DraftBlogs != null && Model.DraftBlogs.Any())
    {
        <div class="blogs-table">
            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Category</th>
                        <th>Created</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var blog in Model.DraftBlogs)
                    {
                        <tr>
                            <td class="blog-title-cell">@blog.Title</td>
                            <td>@blog.CategoryName</td>
                            <td>@blog.CreatedAt.ToString("MMM dd, yyyy")</td>
                            <td>
                                <div class="action-buttons">
                                    <a href="@Url.Action("Edit", new { id = blog.PostId })" class="btn-sm btn-edit">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                    <button onclick="deleteBlog(@blog.PostId, '@blog.Title')" class="btn-sm btn-delete">
                                        <i class="fas fa-trash"></i> Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="blogs-table">
            <div class="no-data">
                <i class="fas fa-file-alt"></i>
                <p>No draft blogs</p>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function deleteBlog(postId, title) {
            if (confirm(`Are you sure you want to delete "${title}"?`)) {
                $.ajax({
                    url: '@Url.Action("Delete", "Blog")',
                    type: 'POST',
                    data: {
                        id: postId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            alert('Blog deleted successfully!');
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('Error deleting blog');
                    }
                });
            }
        }
    </script>
    <form id="deleteForm" style="display:none;">
        @Html.AntiForgeryToken()
    </form>
}